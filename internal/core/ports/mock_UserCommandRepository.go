// Code generated by mockery v2.32.0. DO NOT EDIT.

package ports

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockUserCommandRepository is an autogenerated mock type for the UserCommandRepository type
type MockUserCommandRepository struct {
	mock.Mock
}

// Register provides a mock function with given fields: ctx, id, name, dni, username, email, password, age
func (_m *MockUserCommandRepository) Register(ctx context.Context, id string, name string, dni string, username string, email string, password string, age int8) error {
	ret := _m.Called(ctx, id, name, dni, username, email, password, age)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string, string, string, string, int8) error); ok {
		r0 = rf(ctx, id, name, dni, username, email, password, age)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockUserCommandRepository creates a new instance of MockUserCommandRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUserCommandRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUserCommandRepository {
	mock := &MockUserCommandRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
